"외부 경로를 지정할 때는 다음과 같이 한다.
"source /Users/johngrib/git/myconfig/vim/.ideavimrc

" 참고 link ---------------------------------------------------------------------

  "http://ideavim.sourceforge.net/vim/
  "https://github.com/JetBrains/ideavim/blob/master/doc/set-commands.md
  "https://gist.github.com/zchee/9c78f91cc5ad771c1f5d " action list

  nnoremap <F10>r :source ~/.ideavimrc<CR>

" set commands -----------------------------------------------------------------

  set number
  set history=1000
  set hlsearch
  set ignorecase
  set incsearch
  set smartcase
  set matchpairs
  set undolevels=2000 "undolevels
  set nrformats
  set visualbell

  " plugins
  set surround
  set commentary
  set textobj-entire

  " ideavim only
  set ideajoin
  set ideamarks

" copy , paste , select 기능 보완 ------------------------------------------------
  nnoremap <C-m> :
  vnoremap <C-m> :
  inoremap <C-m> <CR>
  cnoremap <C-m> <CR>

  nnoremap <Esc> <Esc>:w<CR>
  inoremap <Esc> <Esc>:w<CR>


  nnoremap Y y$
  nnoremap <SPACE>y "+y
  vnoremap <SPACE>y "+y
  nnoremap <SPACE>p "+p
  nnoremap <SPACE>a ggVG
  vnoremap <SPACE>a ggVG

" 키 navigation 기능 보완 ---------------------------------------------------------
  nnoremap <PageDown> gT
  nnoremap <PageUp> gt
  nnoremap gl 1gtgT
  nnoremap gf 1gt

" IntelliJ action 명령 테스트 ----------------------------------------------------

  "ideavim 에서는 :command 명령을 사용할 수 없다...

  "라인 스플릿. :action 을 부르는 방식의 성능이 나쁘고, number operation 반복이 안 됨. 그냥 i<CR> 이 낫다.
  "nnoremap <c-j> :action EditorSplitLine<CR>
  nnoremap K i<CR><ESC>

  "다음 기능들은 검색 창이 열린 다음에 포커스가 곧바로 에디터로 이동하므로 불편하고 쓸모가 없음.
  "실행한 다음 포커스가 남아 있기만 해도 굉장히 쓸만할 것 같은데 아쉽다.
  nnoremap <F1><F1> :action SearchEverywhere<CR>

  nnoremap \s :action Switcher<CR>
  nnoremap \t :action ActivateStructureToolWindow<CR>
  nnoremap \u :action ShowUsages<CR>
  nnoremap \r :action ManageRecentProjects<CR>

" IntelliJ IDEA 에서 제공하지 않는 VIM 기능들 ----------------------------------------

  "ideavim 에서는 insert mode <C-P>, <C-N> 이 작동하지 않는다. 대신 IntelliJ 의 keymap 중
  "  Main Menu > Code > Code > Completion > Cyclic Expand Word 가 비슷한 기능을 한다.
  "  Cyclic Expand Word 에 ^p, Cyclic Expand Word (Backward) 에 ^n 을 지정해주면 된다.

nnoremap '. :action JumpToLastChange<CR>0
nnoremap `. :action JumpToLastChange<CR>0

nnoremap [m :action MethodUp<CR>
nnoremap ]m :action MethodDown<CR>
onoremap [m :action MethodUp<CR>
onoremap ]m :action MethodDown<CR>

nnoremap <C-S-5> :action EditorMatchBrace<CR>
nnoremap <Tab>d :action QuickJavaDoc<CR>
nnoremap <Tab>f :action QuickFixes<CR>
nnoremap <Tab>oo :action CloseAllEditorsButActive<CR>
nnoremap <Tab>or :action CloseAllToTheRight<CR>
nnoremap <Tab>ol :action CloseAllToTheLeft<CR>
nnoremap <Tab>i :action InspectCode<CR>
nnoremap <Tab>u :action FindUsages<CR>
nnoremap <Tab>, :e ~/.ideavimrc<CR>

nnoremap <Space>v :action CopyPaths<CR>

let mapleader=" "
set easymotion

nmap sl <Plug>(easymotion-lineforward)
nmap sj <Plug>(easymotion-j)
nmap sk <Plug>(easymotion-k)
nmap sh <Plug>(easymotion-linebackward)
nmap sa <Plug>(easymotion-jumptoanywhere)
nmap sf <Plug>(easymotion-f)

" Slurp, Barf
nmap sch :action :cursive.actions.paredit/slurp-backwards<CR>
nmap scH :action :cursive.actions.paredit/barf-backwards<CR>
nmap scL :action :cursive.actions.paredit/barf-forwards<CR>
nmap scl :action :cursive.actions.paredit/slurp-forwards<CR>

nmap <Tab>h :action :cursive.actions.paredit/slurp-backwards<CR>
nmap <Tab>H :action :cursive.actions.paredit/barf-backwards<CR>
nmap <Tab>L :action :cursive.actions.paredit/barf-forwards<CR>
nmap <Tab>l :action :cursive.actions.paredit/slurp-forwards<CR>

nmap sct :action :cursive.actions.paredit/thread-form<CR>
nmap scT :action :cursive.actions.paredit/unthread-form<CR>

" Parinfer 토글
nmap scp :action :cursive.actions.paredit/toggle<CR>

" REPL 출력을 clear 한다.
nmap scrc :action :cursive.repl.actions/clear-repl<CR>

" 폼 좌우 이동
nmap scj :action :cursive.actions.paredit/move-form-up<CR>
nmap sck :action :cursive.actions.paredit/move-form-down<CR>

" 컬렉션 타입을 순환시킨다. #{} -> () -> {} -> [] -> #{}
" nmap scss :action :cursive.actions.paredit/cycle-collection-type<CR>


" nnoremap <Space>j <Plug>(easymotion-j)
" map <Leader>l <Plug>(easymotion-fl)
" map <Leader>j <Plug>(easymotion-f)
" map <Leader>k <Plug>(easymotion-F)
" map <Leader>h <Plug>(easymotion-Fl)
" map <Leader>J <Plug>(easymotion-j)
" map <Leader>K <Plug>(easymotion-k)


" map  <Leader>  <Plug>(easymotion-prefix)
" vmap <Leader>s <Plug>(easymotion-bd-f)
" nmap <Leader>j <Plug>(easymotion-j)
" vmap <Leader>j <Plug>(easymotion-j)
" nmap <Leader>k <Plug>(easymotion-k)
" vmap <Leader>k <Plug>(easymotion-k)
" nmap <Leader>h <Plug>(easymotion-linebackward)
" vmap <Leader>h <Plug>(easymotion-linebackward)
" nmap <Leader>a <Plug>(easymotion-jumptoanywhere)
" vmap <Leader>a <Plug>(easymotion-jumptoanywhere)

